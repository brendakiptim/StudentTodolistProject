/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package todolistfinal.views;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import todolistfinal.*;
import java.sql.*;
import javax.swing.*;
import java.awt.font.TextAttribute;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author kiptim
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainContainer = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        tasksContainer = new javax.swing.JPanel();
        pendingItemsContainer = new javax.swing.JPanel();
        pendingItemsLabel = new javax.swing.JLabel();
        pendingTaskCheckBox = new javax.swing.JCheckBox();
        addTodoListItem = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tasksTable = new javax.swing.JTable();
        HomebackgroundImage = new javax.swing.JPanel();
        homeNav = new javax.swing.JPanel();
        homeNavLink = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addTaskNav = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        logoutNav = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("container");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        mainContainer.setBackground(new java.awt.Color(255, 255, 255));

        header.setBackground(new java.awt.Color(0, 0, 0));

        title.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        title.setForeground(new java.awt.Color(235, 94, 40));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("STUDENT TODOLIST");

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(418, 418, 418)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addGap(429, 429, 429))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        pendingItemsLabel.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        pendingItemsLabel.setText("Pending Tasks:");

        pendingTaskCheckBox.setFont(new java.awt.Font("Liberation Sans", 2, 18)); // NOI18N
        pendingTaskCheckBox.setSelected(true);
        pendingTaskCheckBox.setText("Listed below are your pending tasks");
        pendingTaskCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendingTaskCheckBoxActionPerformed(evt);
            }
        });

        addTodoListItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/addIcon.png"))); // NOI18N
        addTodoListItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addTodoListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTodoListItemMouseClicked(evt);
            }
        });

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jScrollPane1MousePressed(evt);
            }
        });

        tasksTable.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        tasksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tasksTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tasksTable.setEnabled(false);
        tasksTable.setMinimumSize(new java.awt.Dimension(80, 100));
        tasksTable.setName("task table"); // NOI18N
        tasksTable.setRowHeight(80);
        tasksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tasksTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tasksTable);

        javax.swing.GroupLayout pendingItemsContainerLayout = new javax.swing.GroupLayout(pendingItemsContainer);
        pendingItemsContainer.setLayout(pendingItemsContainerLayout);
        pendingItemsContainerLayout.setHorizontalGroup(
            pendingItemsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingItemsContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pendingItemsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pendingItemsContainerLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(pendingTaskCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pendingItemsContainerLayout.createSequentialGroup()
                        .addGroup(pendingItemsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pendingItemsContainerLayout.createSequentialGroup()
                                .addComponent(pendingItemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addTodoListItem)))
                        .addGap(26, 26, 26))))
        );
        pendingItemsContainerLayout.setVerticalGroup(
            pendingItemsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pendingItemsContainerLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pendingItemsContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pendingItemsLabel)
                    .addComponent(addTodoListItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pendingTaskCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tasksContainerLayout = new javax.swing.GroupLayout(tasksContainer);
        tasksContainer.setLayout(tasksContainerLayout);
        tasksContainerLayout.setHorizontalGroup(
            tasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tasksContainerLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(pendingItemsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tasksContainerLayout.setVerticalGroup(
            tasksContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tasksContainerLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pendingItemsContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        HomebackgroundImage.setBackground(new java.awt.Color(235, 94, 40));
        HomebackgroundImage.setBorder(new javax.swing.border.MatteBorder(null));

        homeNav.setBackground(new java.awt.Color(235, 94, 40));
        homeNav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeNavMouseClicked(evt);
            }
        });

        homeNavLink.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        homeNavLink.setForeground(new java.awt.Color(255, 255, 255));
        homeNavLink.setText("HOME");
        homeNavLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Home.png"))); // NOI18N

        javax.swing.GroupLayout homeNavLayout = new javax.swing.GroupLayout(homeNav);
        homeNav.setLayout(homeNavLayout);
        homeNavLayout.setHorizontalGroup(
            homeNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeNavLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(homeNavLink, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        homeNavLayout.setVerticalGroup(
            homeNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homeNavLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(homeNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(homeNavLink, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        addTaskNav.setBackground(new java.awt.Color(235, 94, 40));
        addTaskNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTaskNavMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ADD TASK");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/addWite.png"))); // NOI18N

        javax.swing.GroupLayout addTaskNavLayout = new javax.swing.GroupLayout(addTaskNav);
        addTaskNav.setLayout(addTaskNavLayout);
        addTaskNavLayout.setHorizontalGroup(
            addTaskNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addTaskNavLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addTaskNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTaskNavLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addTaskNavLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())))
        );
        addTaskNavLayout.setVerticalGroup(
            addTaskNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTaskNavLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addTaskNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        logoutNav.setBackground(new java.awt.Color(235, 94, 40));
        logoutNav.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutNav.setPreferredSize(new java.awt.Dimension(147, 45));
        logoutNav.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutNavMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Logout.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("LOGOUT");

        javax.swing.GroupLayout logoutNavLayout = new javax.swing.GroupLayout(logoutNav);
        logoutNav.setLayout(logoutNavLayout);
        logoutNavLayout.setHorizontalGroup(
            logoutNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutNavLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logoutNavLayout.setVerticalGroup(
            logoutNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoutNavLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoutNavLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout HomebackgroundImageLayout = new javax.swing.GroupLayout(HomebackgroundImage);
        HomebackgroundImage.setLayout(HomebackgroundImageLayout);
        HomebackgroundImageLayout.setHorizontalGroup(
            HomebackgroundImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(HomebackgroundImageLayout.createSequentialGroup()
                .addComponent(addTaskNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(logoutNav, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
        );
        HomebackgroundImageLayout.setVerticalGroup(
            HomebackgroundImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomebackgroundImageLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(homeNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addTaskNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutNav, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainContainerLayout = new javax.swing.GroupLayout(mainContainer);
        mainContainer.setLayout(mainContainerLayout);
        mainContainerLayout.setHorizontalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainContainerLayout.createSequentialGroup()
                .addComponent(HomebackgroundImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(tasksContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainContainerLayout.setVerticalGroup(
            mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainContainerLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(mainContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tasksContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HomebackgroundImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(mainContainer);
        renderTodolists(); overides();

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void addTodoListItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTodoListItemMouseClicked
        // TODO add your handling code here:
        AddTask addTodoPage = new AddTask();
        this.dispose();
        addTodoPage.setVisible(true);

    }//GEN-LAST:event_addTodoListItemMouseClicked

    private void pendingTaskCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pendingTaskCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pendingTaskCheckBoxActionPerformed

    private void jScrollPane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane1MousePressed

    private void tasksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasksTableMouseClicked
        // TODO add your handling code here:
        JTable source = (JTable) evt.getSource();
        Utils allTasks = new Utils();

        int row = source.rowAtPoint(evt.getPoint());
        int column = source.columnAtPoint(evt.getPoint());
        String s = source.getModel().getValueAt(row, column) + "";
        if (s.equals("true") || s.equals("false")) {
            int boolNumber = s.equals("false") ? 1 : 0;
            String id = source.getModel().getValueAt(row, 3) + "";
            allTasks.completeTodos(id, boolNumber);
            renderTodolists();

        } else if (s.equals("X")) {
            String id = source.getModel().getValueAt(row, 3) + "";

            allTasks.deleteTodos(id);
            renderTodolists();

        }


    }//GEN-LAST:event_tasksTableMouseClicked

    private void homeNavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeNavMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_homeNavMouseClicked

    private void addTaskNavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTaskNavMouseClicked
        // TODO add your handling code here:
        Utils allUtils = new Utils();
        AddTask addTodoPage = new AddTask();
        this.dispose();
        addTodoPage.setVisible(true);
    }//GEN-LAST:event_addTaskNavMouseClicked

    private void logoutNavMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutNavMouseClicked
        // TODO add your handling code here:
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutNavMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HomebackgroundImage;
    private javax.swing.JPanel addTaskNav;
    private javax.swing.JLabel addTodoListItem;
    private javax.swing.JPanel header;
    private javax.swing.JPanel homeNav;
    private javax.swing.JLabel homeNavLink;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel logoutNav;
    private javax.swing.JPanel mainContainer;
    private javax.swing.JPanel pendingItemsContainer;
    private javax.swing.JLabel pendingItemsLabel;
    private javax.swing.JCheckBox pendingTaskCheckBox;
    private javax.swing.JPanel tasksContainer;
    private javax.swing.JTable tasksTable;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    //fetch the table status
    public Boolean getStatus(int isComplete) {
        if (isComplete == 0) {
            return false;
        } else {
            return true;
        }
    }

    ;
    

    public void overides() {

        tasksTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);

//                //style
                Map attributes = (new Font("Ubuntu", Font.BOLD, 18)).getAttributes();
                attributes.put(TextAttribute.STRIKETHROUGH, TextAttribute.STRIKETHROUGH_ON);
//                int columnVal = 0;
//                int rowVal = table.getSelectedRow();
//                String values = table.getModel().getValueAt(row, column).toString();
                if (value instanceof Boolean) {
                    if (value.equals(true)) {
                        c.setFont(new Font(attributes));

                    }
                }
                return c;

            }

        });

    }

    ;

    

    public void renderTodolists() {
        Utils allTasks = new Utils();
        //THE MODEL OF OUR TABLE

        DefaultTableModel model = (DefaultTableModel) tasksTable.getModel();
        model.setRowCount(0);
        model.setColumnCount(0);
        model.addColumn(
                "Task");
        model.addColumn(
                "Description");

        model.addColumn(
                "Due Date");
        model.addColumn(
                "ID");

        model.addColumn(
                "Completed");
        model.addColumn(
                "Delete");

        ResultSet tasks = allTasks.fetchTodos();

        try {
            while (tasks.next()) {
                model.addRow(
                        new Object[]{tasks.getString("name"),
                            tasks.getString("description"),
                            tasks.getString("dueDate"),
                            tasks.getString("idTask"),
                            getStatus(Integer.parseInt(tasks.getString("isCompleted"))),
                            "X"

                        }
                );
            }
        } catch (SQLException e) {
            System.out.println("error getting tasks: " + e.getMessage());
        }

    }

    public void renderTable() {

    }
}
